struct cpu_table {
	unsigned long	idcode;
	unsigned long	idmask;
	void		(*map_io)(struct map_desc *mach_desc, int size);
	void		(*init_uarts)(struct s3c2410_uartcfg *cfg, int no);
	void		(*init_clocks)(int xtal);
	int		(*init)(void);
	const char	*name;
};
struct cpu_table cpu_ids[] __initdata = {
	,
	{
		.idcode		= 0x32440000,
		.idmask		= 0xffffffff,
		.map_io		= s3c244x_map_io,
		.init_clocks	= s3c244x_init_clocks,
		.init_uarts	= s3c244x_init_uarts,
		.init		= s3c2440_init,
		.name		= name_s3c2440
	},
}

链接脚本:
__arch_info_begin = .;
   *(.arch.info.init)
__arch_info_end = .;


#define MACHINE_START(_type,_name)
	__attribute__((__section__(".arch.info.init")))
#define MACHINE_END

MACHINE_START(S3C2440, "SMDK2440")
	.boot_params	= S3C2410_SDRAM_PA + 0x100,
	.init_irq	= s3c24xx_init_irq,
	.map_io = smdk2440_map_io,
	.init_machine	= smdk2440_machine_init,
MACHINE_END


start_kernel
	setup_arch
		setup_machine
		paging_init
			devicemaps_init
			mdesc->map_io()									// map_io = smdk2440_map_io
				smdk2440_map_io
					s3c24xx_init_io
						cpu = s3c_lookup_cpu(idcode);					//找到对应的CPU
							struct cpu_table *tab = cpu_ids;
								(cpu->map_io)(mach_desc, size)
									s3c244x_map_io						// 修改一些名称
					s3c24xx_init_clocks(12000000)
						(cpu->init_clocks)(xtal);						//通过 s3c24xx_init_io查找到的CPU调用
							s3c244x_init_clocks
								设置clk,hclk,pclk
								设置各功能的时钟频率
					s3c24xx_init_uarts
						内核启动流程5-串口设置：添加串口设备