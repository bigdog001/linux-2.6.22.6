linux网卡驱动说明
https://blog.csdn.net/qq_36576792/article/details/84958562
https://blog.csdn.net/qq_36576792/article/details/84990072
https://blog.csdn.net/qq_36576792/article/details/85002342

1 代码框架
1.1 初始函数中
    1. 使用alloc_netdev()来分配一个net_device结构体。
    2. 设置net_device结构体的成员。
    3. 使用register_netdev()来注册net_device结构体。

1.2 发包函数中
    1. 使用netif_stop_queue()来阻止上层向网络设备驱动层发送数据包。
    2. 调用收包函数，并代入发送的sk_buff缓冲区，里面来伪造一个收的ping包函数提交上层。
    3. 使用dev_kfree_skb()函数来释放发送的sk_buff缓存区。
    4. 更新发送的统计信息。
    5. 使用netif_wake_queue()来唤醒被阻塞的上层。

1.3 收包函数中
    1. 需要对调上图的ethhdr结构体 ”源/目的”MAC地址。
    2. 需要对调上图的iphdr结构体”源/目的” IP地址。
    3. 使用ip_fast_csum()来重新获取iphdr结构体的校验码。
    4. 设置上图数据包的数据类型,之前是发送ping包0x08，需要改为0x00，表示接收ping包。
    5. 使用dev_alloc_skb()来构造一个新的sk_buff。
    6. 使用skb_reserve(rx_skb, 2)；将sk_buff缓冲区里的数据包先后位移2字节，来腾出sk_buff缓冲区里的头部空间。
    7. 使用memcpy()将之前修改好的sk_buff->data复制到新的sk_buff里的data成员指向的地址处。



