根文件系统

内核启动的第一个进程: /sbin/init

1，挂载根文件系统
	内核怎样启动第一个应用程序
		一，open(/dev/console) , sys_dump(0), sys_dump(0)
			printf(), scanf(), err() 标准输出，输入，错误，所有的打印信息都是从/dev/console打错出来
		二，通过 run_init_process 启动程序
			程序可以是：命令行参数，/sbin/init， /etc/init, 等。
			
busybox: 
	编译busybox得到busybox的命令集合, 
	一，init.c程序：
		1）读取配置文件；
		2）解析配置文件；
		3）根据配置文件执行用户程序
		busybox --> init_main
						parse_inittab
							file = fopen(INITTAB, "r");	//打开配置文件 /etc/inittab
							
							new_init_action(a->action, command, id);//创建init_action结果，并填充。将结构放入 init_action_list
							
							run_actions(SYSINIT);
								waitfor(a, 0);				//执行应用程序，等待它执行完毕
									run(a)			//创建 process子进程 
									waitpid(runpid, &status, 0)	//等待它结束
								delete_init_action(a);	//执行完，从链表删除
							run_actions(WAIT);
								waitfor(a, 0);				//执行应用程序，等待它执行完毕
									run(a)			//创建 process子进程 
									waitpid(runpid, &status, 0)	//等待它结束
								delete_init_action(a);	//执行完，从链表删除
							run_actions(ONCE);
								run(a);				//创建 process子进程 
								delete_init_action(a);	//执行完，从链表删除
							while(1) {
								run_actions(RESPAWN);
									if (a->pid == 0) {
										a->pid = run(a);
													打印 "Please press Enter to activate this console."
													等待回车
													创建子进程
									}
								run_actions(ASKFIRST);
									if (a->pid == 0) {
										a->pid = run(a);
									}
								wpid = wait(NULL);		//等待子进程退出
								while (wpid > 0) {
									a->pid = 0;			//退出后，设置pid = 0
								}
							}

一个最小的根文件系统包括:
/dev/console /dev/null
/dev/inittab
配置文件指定的应用程序
库
init本身，即busybox

							
从默认的new_init_action反推出默认的配置文件：	

inittab的格式
	<id>:<runlevels>:<action>:<process>
	id --> /dev/id, 用作终端： stdio, stdout, stderr: scanf, printf, err
	runlevels	: 忽略
	action		: 指示何时执行
	process		: 应用程序或脚本 
	
::ctrlaltdel:reboot
	/* Reboot on Ctrl-Alt-Del */
	new_init_action(CTRLALTDEL, "reboot", "");
	
::shutdown:umount -a -r
	/* Umount all filesystems on halt/reboot */
	new_init_action(SHUTDOWN, "umount -a -r", "");
	
	/* Swapoff on halt/reboot */
	if (ENABLE_SWAPONOFF) new_init_action(SHUTDOWN, "swapoff -a", "");//嵌入式系统中不使用
	
::restart:init
	/* Prepare to restart init when a HUP is received */
	new_init_action(RESTART, "init", "");
	
::askfirst:-/bin/sh
	/* Askfirst shell on tty1-4 */
	new_init_action(ASKFIRST, bb_default_login_shell, "");
	
/dev/tty2::askfirst:-/bin/sh
	new_init_action(ASKFIRST, bb_default_login_shell, VC_2);
	
/dev/tty2::askfirst:-/bin/sh
	new_init_action(ASKFIRST, bb_default_login_shell, VC_3);
	
/dev/tty2::askfirst:-/bin/sh
	new_init_action(ASKFIRST, bb_default_login_shell, VC_4);
	
::sysinit:/etc/init.d/rcS
	/* sysinit */
	new_init_action(SYSINIT, INIT_SCRIPT, "");
							
	
		
	二，

2，启动应用程序


new_init_action(ASKFIRST, bb_default_login_shell, VC_2);

new_init_action(0x004, "-/bin/sh", "/dev/tty2");
	1) 创建一个 init_action结构，填充；
	2) 把 init_action 放入链表 init_action_list
	3) 